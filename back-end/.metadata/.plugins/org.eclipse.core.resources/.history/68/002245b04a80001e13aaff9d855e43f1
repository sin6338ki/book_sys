package com.sjy.book_sys.service;

import org.springframework.stereotype.Service;

import com.sjy.book_sys.mapper.RentMapper;
import com.sjy.book_sys.model.RentDto;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
@RequiredArgsConstructor
public class RentService {
	
	private final RentMapper rentMapper;
	
	/**
	 * 대여 요청 service
	 * @param rentDto
	 * @return 대여 성공시 "success rent", 실패시 "fail rent", 대여 불가능한 책이라면 예상 반납일
	 */
	public String applyRent(RentDto rentDto) {
		String isPossibleRent = "";
		try {
			//책 대여 가능 여부 확인
			isPossibleRent = isSameBook(rentDto);
			//Rent 테이블 insert
			int resultOfRent = rentMapper.insertRent(rentDto);
			//Book 테이블 대출 권수 추가
			int resultOfUpdateBookRentalCnt = rentMapper.updateBookRentalCnt(rentDto);
			//Member 테이블 대출 권수 추가
			int resultOfUpdateMemberRentCnt = rentMapper.updateMemberRentCnt(rentDto);
			//모두 성공시 success
			if(resultOfRent > 0 && resultOfUpdateBookRentalCnt > 0 && resultOfUpdateMemberRentCnt > 0){
				return "rent success";
			}else {
				return "fail rent";
			}
		}catch(NullPointerException e) { //책 대여 불가능시
			return isPossibleRent;
		}catch(Exception e) {
			e.printStackTrace();
			return "sever error";
		}
	}
	
	/**
	 * member 도서 대출 가능 권수 조회 service
	 * @param memberId
	 * @return 가능시 가능한 대출 권수, 불가능시 0
	 */
	public int findRentCnt(String memberId) {
		int possibleRentCnt = 5 - rentMapper.findRentCnt(memberId);
		if(possibleRentCnt > 0) {
			return possibleRentCnt;
		}else {
			return 0;
		}
	}

	/**
	 * 책 대여 가능 여부 조회 service
	 * @param rentDto
	 * @return 가능시 "책 대여가 가능합니다" 불가능시 예상 반납일
	 */
	public String isSameBook(RentDto rentDto) {
		try {
			log.info("memberId, bookId : {}, {}", rentDto.getMemberId(), rentDto.getBookId());
			String resultOfIsSameBook = rentMapper.isSameBook(rentDto);
			return resultOfIsSameBook;
		}catch(NullPointerException e) {
			return "possible rent";
		}
	}
	
	/**
	 * 대여 신청 service
	 * @param rentDto
	 * @return 성공시 1
	 */
	public int insertRent(RentDto rentDto) {
		return rentMapper.insertRent(rentDto);
	}
	
	/**
	 * member 대여 권수 추가 service
	 * @param rentDto
	 * @return 성공시 1
	 */
	public int updateMemberRentCnt(RentDto rentDto) {
		return rentMapper.updateMemberRentCnt(rentDto);
	}
	
	/**
	 * book 대여 권수 추가 service
	 * @param rentDto
	 * @return 성공시 1
	 */
	public int updateBookRentalCnt(RentDto rentDto) {
		return rentMapper.updateBookRentalCnt(rentDto);
	}
	
	public isMemberPossibleRent(RentDto rentDto) {
		return rentMapper.isMemberPossibleRent(rentDto);
	}
}
